<!doctype html>
<html lang="en">
<head>
  <title><%= device?.name || 'Newswall' %></title>
  <link rel="stylesheet" href="https://kit.fontawesome.com/a22be8527e.css" crossorigin="anonymous">
  <%# Refresh this page every displayFor minutes and mark the current item as previous in query param so that we try to pick a different paper next time %>
  <meta http-equiv="refresh" content="<%=paper.displayFor * 60%>;?prev=<%=paper.id%>">
  <style>
    * {
      margin: 0;
    }
    .paper-container {
      height: <%=display.height%>px;
      width: <%=display.width%>px;
      border: 1px solid;
      overflow: hidden;
    }
    .paper-container img {
      height: 100%;
      width: 100%;
      object-fit: contain;
    }
    .paper-container .statusbar {
      <% statusBarFontSize = 10 %>
      position: absolute;
      font-size: <%=statusBarFontSize%>px;
      font-family: serif;
      padding-left: <%=statusBarFontSize%>px;
      top: <%=display.height - 2*statusBarFontSize%>px;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.min.js"></script>
  <script>
    random = (from, to) => from + Math.floor((to - from) * Math.random())

    pick = (level, choices, buckets = [0, 10, 20, 40, 65, 90]) => choices[0] //.findLastIndex(x => level >= x)]

    telemetry = (event) => {
      <% if (!env.isProd) { %>
      okular = {
        RSSI: random(40, 80),
        BatteryLevel: random(5, 99),
        Temperature: random(-10, 35),
      }
      <% } %>
      const status = typeof okular !== 'undefined' ? {
        uuid: okular.session_uuid,
        wifi: okular.RSSI ? Math.min(Math.max(2*(100 - okular.RSSI), 0), 100) : undefined, //See: https://stackoverflow.com/a/31852591/471136
        battery: okular.BatteryLevel,
        temperature: okular.Temperature,
        timeout: typeof okular['DevicesStatus'] == 'function' ? okular.GetReloadTimeout() : undefined,
        event: event,
        debug: `Hello 24`
      } : {}
      status.nextRefresh = '<%=dayjs().add(paper.displayFor, 'minutes').tz(device?.timezone || dayjs.tz.guess()).format('h:mm A')%>'
      status.updatedAt = status.session_uuid ? '<%=dayjs.duration(dayjs().diff(dayjs().add(paper.displayFor/2, 'minutes'))).humanize(true) %>' : undefined
      $.post('/log', status)
      return status
    }

    document.addEventListener('device-connect', telemetry, true)
    $(document).ready(() => {
      try {
        const status = telemetry('update-status')
        $('.statusbar').empty()
        if (status.nextRefresh) $('.statusbar').append(`${status.nextRefresh} <i class="fa-sharp fa-solid fa-rotate-right"></i>&emsp;`)
        if (status.updatedAt) $('.statusbar').append(`${status.updatedAt}: `)
        if (status.wifi) $('.statusbar').append(`${status.wifi}% <i class="fa-regular fa-${pick(status.wifi, ['signal-slash', 'signal-fair', 'signal-weak', 'signal-good', 'signal-strong', 'signal'])}"></i>&emsp;`)
        if (status.battery) $('.statusbar').append(`${status.battery}% <i class="fa-regular fa-rotate-270 fa-battery-${pick(status.battery, ['empty', 'low', 'quarter', 'half', 'three-quarters', 'full'])}"></i>&emsp;`)
        if (status.temperature) $('.statusbar').append(`${Math.round(<%=device?.showFahrenheit ?? true%> ? status.temperature*1.8 + 32 : status.temperature)}Â° ${<%=device?.showFahrenheit ?? true%> ? 'F' : 'C'}`)
      } catch (error) {
        $.post('/log', {error: error})
      }
    })
  </script>
</head>
<body>
  <div class="paper-container">
    <img src="/archive/<%=paper.date%>/<%=paper.id%>.png" style="transform: scale(<%=paper.scale%>)" alt="Showing <%=paper.id%> for <%=paper.date%>">
    <div class="statusbar"></div>
  </div>
</body>
</html>
