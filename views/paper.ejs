<!doctype html>
<html lang="en">
<head>
  <title>Newswall</title>
  <!-- Always refresh every 12 hours -->
  <meta http-equiv="refresh" content="43200">
  <link rel="stylesheet" href="https://kit.fontawesome.com/a22be8527e.css" crossorigin="anonymous">
  <style>
    * {
      margin: 0;
    }
    .paper-container {
      height: <%=display.height%>px;
      width: <%=display.width%>px;
      border: 1px solid;
      overflow: hidden;
    }
    .paper-container img {
      height: 100%;
      width: 100%;
      object-fit: contain;
    }
    .paper-container .statusbar {
      <% statusBarFontSize = 10 %>
      position: absolute;
      font-size: <%=statusBarFontSize%>px;
      font-family: serif;
      padding-left: <%=statusBarFontSize%>px;
      top: <%=display.height - 2*statusBarFontSize%>px;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/dayjs-with-plugins@1.0.3/dist/dayjs-with-plugins.min.js"></script>
  <script src="https://polyfill.io/v3/polyfill.min.js?features=URLSearchParams,Promise"></script>

  <script>
    random = (from, to) => from + Math.floor((to - from) * Math.random())

    //TODO: pick = (level, choices, buckets = [0, 10, 20, 40, 65, 90]) => choices[buckets.findLastIndex(x => level >= x)]
    pick = (level, choices) => {
      const buckets = [0, 10, 20, 40, 65, 90]
      for(let i = Math.min(choices.length, buckets.length)-1; i>=0; i--)
        if (level >= buckets[i]) return choices[i]
      return choices[0]
    }

    telemetry = (event) => {
      <% if (!env.isProd) { %> okular = { RSSI: random(45, 85), BatteryLevel: random(5, 99), Temperature: random(-10, 35)}<% } %>
      return typeof okular !== 'undefined' ? {
        uuid: okular.session_uuid,
        wifi: okular.RSSI ? Math.min(Math.max(2*(100 - okular.RSSI), 0), 100) : undefined, //See: https://stackoverflow.com/a/31852591/471136
        battery: okular.BatteryLevel,
        temperature: okular.Temperature,
        timeout: typeof okular['DevicesStatus'] == 'function' ? okular.GetReloadTimeout() : undefined,
        event: event.detail || event,
      } : {}
    }

    update = () => {
      try {
        const status = telemetry('update-status')
        return $.get('/next', {
          deviceId: status.uuid || new URLSearchParams(window.location.search).get('deviceId'),
        }, (res) => {
            status.timezone = res.device && res.device.timezone ? res.device.timezone : dayjs.tz.guess()  // TODO: res.device.timezone || dayjs.tz.guess()
            status.nextRefresh = dayjs().add(res.paper.displayFor, 'minutes')
            status.nextRefresh = (status.timezone ? status.nextRefresh.tz(status.timezone) : status.nextRefresh).format('h:mm A')
            status.updatedAt = status.uuid ? dayjs.duration(dayjs().diff(dayjs().add(res.paper.displayFor/2, 'minutes'))).humanize(true) : undefined
            status.debug = 'post'

            $.post('/log', status)

            let statusBar = ''
            if (status.nextRefresh) statusBar +=`${status.nextRefresh} <i class="fa-sharp fa-solid fa-rotate-right"></i>&emsp;`
            if (status.updatedAt)   statusBar +=`${status.updatedAt}: `
            if (status.wifi)        statusBar +=`${status.wifi}% <i class="fa-regular fa-${pick(status.wifi, ['signal-slash', 'signal-fair', 'signal-weak', 'signal-good', 'signal-strong', 'signal'])}"></i>&emsp;`
            if (status.battery)     statusBar +=`${status.battery}% <i class="fa-regular fa-rotate-270 fa-battery-${pick(status.battery, ['empty', 'low', 'quarter', 'half', 'three-quarters', 'full'])}"></i>&emsp;`
            if (status.temperature) statusBar +=`${status.temperature}Â° C`

            $('.paper-container').html(`
              <img src="/archive/${res.paper.date}/${res.paper.id}.png" style="transform: scale(${res.paper.scale})" alt="Showing ${res.paper.id} for ${res.paper.date}">
              <div class="statusbar">${statusBar}</div>
            `)
          }
        )
      } catch (error) {
        $.post('/log', {error: error})
      }
    }

    $(document).ready(update)
  </script>
</head>
<body>
  <div class="paper-container"></div>
</body>
</html>
